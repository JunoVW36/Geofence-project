# Copyright 2015 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Django settings for datalive_site project.

Generated by 'django-admin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import datetime

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = os.path.dirname(os.path.dirname(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '71483e3c96bc935fbabe9b21f684cc297f9f43985acae95d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
CSRF_COOKIE_SECURE = True # Change to True when deploying other than localreserved.
SESSION_COOKIE_SECURE = True # Change to True when deploying other than local

#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Django settings for datalive_site project.

Generated by 'django-admin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os


# SECURITY WARNING: App Engine's security features ensure that it is safe to
# have ALLOWED_HOSTS = ['*'] when the app is deployed. If you deploy a Django
# app not on App Engine, make sure to set an appropriate host here.
# See https://docs.djangoproject.com/en/1.10/ref/settings/
ALLOWED_HOSTS = ['*']
INTERNAL_IPS = ('127.0.0.1')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'storages',
    'django_mysql',
    ### local apps
    'services',
    'datalive_auth',
    'datalive_cust_veh',
    'datalive_gps',
    'datalive_defects',
    'datalive_vehicle_check',
    'datalive_vehicle_help',
    'datalive_notifications',
    'datalive_behaviour',
    'datalive_sms_voice',
    'datalive_geofence',
    'datalive_solarvista',
]

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'datalive_site.urls'

TEMPLATE_DIRS_APPS = []
for root, dirs, files in os.walk(PROJECT_DIR):
    if 'templates' in dirs:
        TEMPLATE_DIRS_APPS += (os.path.join(root, 'templates'),)


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'datalive_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# [START db_setup]
if os.getenv('SERVER_SOFTWARE', '').startswith('Google App Engine'):
    # Running on production App Engine, so connect to Google Cloud SQL using
    # the unix socket at /cloudsql/<your-cloudsql-connection string>
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': '/cloudsql/datalive-staging:europe-west1:datalive-django',
            'NAME': 'datalive',
            'USER': 'datalive',
            'PASSWORD': '$45Tk@d2l9',
        }
    }
elif os.getenv('SETTINGS_MODE') == 'prod':
    # Running in development, but want to access the Google Cloud SQL instance in production.
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': '/cloudsql/datalive-staging:europe-west1:datalive-django',
            'NAME': 'datalive',
            'USER': 'datalive',
            'PASSWORD': '$45Tk@d2l9',
        }
    }
else:
    # Running locally so connect to either a local MySQL instance or connect to
    # Cloud SQL via the proxy. To start the proxy via command line:
    #
    #     $ cloud_sql_proxy -instances=[INSTANCE_CONNECTION_NAME]=tcp:3307
    #
    # See https://cloud.google.com/sql/docs/mysql-connect-proxy
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': '127.0.0.1',
            'PORT': '3307',
            'NAME': 'datalive',
            'USER': 'datalive',
            'PASSWORD': '$45Tk@d2l9',
        }
    }
# [END db_setup]

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
SITE_ROOT = os.path.realpath(os.path.dirname(__file__))
# Absolute filesystem path to the directory that will hold user-uploaded files.
MEDIA_ROOT = os.path.join(PROJECT_DIR, "media")
# URL that handles the media served from MEDIA_ROOT.
MEDIA_URL = '/media/'
STATIC_ROOT = os.path.join(PROJECT_DIR, "static")
STATIC_URL = '/static/'


#Google Storage settings (using storages library)
DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
GS_BUCKET_NAME = 'datalive-staging-file-storage'#datalive-staging.appspot.com'

# # Google Cloud Storage and upload settings.
# # Typically, you'll name your bucket the same as your project. To create a
# # bucket:
# #
# #   $ gsutil mb gs://<your-bucket-name>
# #
# # You also need to make sure that the default ACL is set to public-read,
# # otherwise users will not be able to see their upload images:
# #
# #   $ gsutil defacl set public-read gs://<your-bucket-name>
# #
# # You can adjust the max content length and allow extensions settings to allow
# # larger or more varied file types if desired.
# PROJECT_ID = 'datalive-staging'
# CLOUD_STORAGE_BUCKET = 'datalive-staging.appspot.com'
# MAX_CONTENT_LENGTH = 8 * 1024 * 1024
# ALLOWED_EXTENSIONS = set(['png', 'jpg', 'jpeg', 'gif', 'pdf']) 
# # TODO - are these actually used with Storages??



# Datalive custom user model to login with email as username
AUTH_USER_MODEL = 'datalive_auth.DataliveUser'

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/home/'

STATICFILES_DIRS = [
    #os.path.join(PROJECT_DIR, "static"),
    #os.path.join(PROJECT_DIR, "client/dist"),
    # "/home/polls.com/polls/static",
    # "/opt/webfiles/common",
]


STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        #'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    )
}


JWT_AUTH = {
    'JWT_ALLOW_REFRESH': True,
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=1),
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=2),
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'datalive_auth.serializers.jwt_response_payload_handler',
}

# AUTHENTICATION_BACKENDS = (
#     'datalive_auth.backends.UsernameOrEmailBackend',
# )


# TWILIO SMS/Voice Settings
TWILIO_ACCOUNT_SID = 'AC67f775c0072856eb12e4379bda77c8de' #os.environ.get('TWILIO_ACCOUNT_SID')
TWILIO_AUTH_TOKEN = '66b4224365e1ea3f41a7bcb1f1e1f192' #os.environ.get('TWILIO_AUTH_TOKEN')
TWILIO_NUMBER = '441274288653' # os.environ.get('TWILIO_NUMBER')
PANIC_EMAIL_NOTIFICATION_ADDRESS = 'brian@thejustbrand.co.uk'
PANIC_SMS_NOTIFICATION_ADDRESS = '447919078482'



DEV_APPS = []

NOTIFICATIONS_EMAIL_ADDRESS = 'no-reply@datalive-staging.appspotmail.com'
SITE_URL = 'https://datalive-staging.appspot.com'
DEFECT_CONFIRMATION_EMAIL = 'brian@thejustbrand.co.uk'


# MOT expiry notification config
SEND_NOTIFICATION_IF_MOT_EXPIRY_DATE_LESS_THAN_DAYS = 7

try:
    from local_settings import *
    INSTALLED_APPS += DEV_APPS
except ImportError:
    pass
