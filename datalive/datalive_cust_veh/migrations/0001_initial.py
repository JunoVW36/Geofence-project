# -*- coding: utf-8 -*-
# Generated by Django 1.11a1 on 2017-07-03 12:34
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('archived', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserPrefs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_zone', models.CharField(default='Europe/London', max_length=64)),
                ('units_distance', models.CharField(choices=[('MLS', 'Miles'), ('KMS', 'Kilometers')], default='MLS', max_length=3)),
                ('units_volume', models.CharField(choices=[('GAL', 'Gallons'), ('LTR', 'Litres')], default='GAL', max_length=3)),
                ('units_fuel_econ', models.CharField(choices=[('MPG', 'Miles per gallon'), ('LPK', 'Litres per 100km')], default='MPG', max_length=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('registration', models.CharField(db_index=True, max_length=20)),
                ('fleet_id', models.CharField(db_index=True, max_length=20)),
                ('vin', models.CharField(db_index=True, max_length=20)),
                ('type', models.CharField(choices=[('BIK', 'Bike'), ('CAR', 'Car'), ('VAN', 'Van'), ('STR', 'Small Truck'), ('MTR', 'Medium Truck'), ('LTR', 'Large Truck'), ('TNK', 'Tanker'), ('TRL', 'Trailer'), ('CON', 'Construction Equiptment'), ('RDR', 'Road Roller'), ('BUS', 'Bus'), ('BOT', 'Boat')], default='VAN', max_length=3)),
                ('archived', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='datalive_cust_veh.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField()),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='datalive_cust_veh.Customer')),
                ('vehicles', models.ManyToManyField(to='datalive_cust_veh.Vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracker', models.CharField(db_index=True, max_length=32)),
                ('odo_offset', models.IntegerField(default=0)),
                ('installed', models.DateTimeField()),
                ('deinstalled', models.DateTimeField()),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='trackers',
            field=models.ManyToManyField(to='datalive_cust_veh.VehicleTracker'),
        ),
    ]
