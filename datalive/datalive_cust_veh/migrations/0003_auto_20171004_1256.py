# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-10-04 12:56
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('datalive_cust_veh', '0002_auto_20170704_1220'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('first_name', models.CharField(db_index=True, max_length=200)),
                ('last_name', models.CharField(db_index=True, max_length=200)),
                ('email', models.EmailField(max_length=256)),
                ('phone', models.CharField(blank=True, max_length=256, null=True)),
                ('address1', models.CharField(blank=True, max_length=1024, null=True)),
                ('address2', models.CharField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=256, null=True)),
                ('county', models.CharField(blank=True, max_length=256, null=True)),
                ('postcode', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Livery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livery', models.CharField(max_length=255)),
                ('make', models.CharField(max_length=255)),
                ('model', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='LiveryView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('img', models.CharField(max_length=255)),
                ('img_filename', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('solar_vista_ref', models.IntegerField(null=True)),
                ('archived', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='allocated_depot_date',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='latest_odometer_date',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='latest_odometer_reading',
            field=models.IntegerField(null=True),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='latest_odometer_source',
            field=models.CharField(choices=[('MAN', 'Driver manually entered'), ('GPS', 'From tracker GPS'), ('OBD', 'From tracker on OBD'), ('CAN', 'From tracker on J1939 CAN Bus')], default='MAN', max_length=3),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='mot_date',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='odf',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='ved',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='vehiclegroup',
            name='archived',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='vehiclegroup',
            name='is_depot',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='vehiclegroup',
            name='is_hub',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='vehiclegroup',
            name='is_linehaul',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='vehiclegroup',
            name='solar_vista_ref',
            field=models.IntegerField(null=True),
        ),
        migrations.AlterField(
            model_name='vehiclegroup',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='region',
            name='VehicleGroups',
            field=models.ManyToManyField(to='datalive_cust_veh.VehicleGroup'),
        ),
        migrations.AddField(
            model_name='region',
            name='contacts',
            field=models.ManyToManyField(to='datalive_cust_veh.Contact'),
        ),
        migrations.AddField(
            model_name='region',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='datalive_cust_veh.Customer'),
        ),
        migrations.AddField(
            model_name='livery',
            name='views',
            field=models.ManyToManyField(to='datalive_cust_veh.LiveryView'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='livery',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='datalive_cust_veh.Livery'),
        ),
        migrations.AddField(
            model_name='vehiclegroup',
            name='contacts',
            field=models.ManyToManyField(to='datalive_cust_veh.Contact'),
        ),
    ]
